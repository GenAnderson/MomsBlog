import type { NextPage } from "next";
import { trpc } from "../utils/trpc";
import { signIn, signOut, useSession } from "next-auth/react";
import Link from "next/link";

import Head from "next/head";
import Footer from "../../components/footer/footer";
import HeroSlider from "../../components/heroSlider";
import Marketing from "../../components/marketing";
import { findLatestBlog } from "../controller";

import styles from "./index.module.scss";

const Home: NextPage = () => {
  const { data } = trpc.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Cascade Counseling</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/icon.png" />
      </Head>
      <div className={styles.homeContainer}>
        <div className={styles.welcome__container}>
          <div className={styles.absoluteTextBox}>
            <div className={styles.welcome__textBox}>
              <h1 className={styles.company_name}>Cascade Counseling</h1>
              <p>
                <em className={styles.company_name_secondLine}>
                  For Personal Empowerment
                </em>
              </p>
              <p>
                Lorem ipsum dolor sit amet consectetur adipisicing elit.
                Voluptatem, ab nisi eos mollitia autem consequatur quod suscipit
                inventore porro officia in dicta molestiae voluptatum. Dicta
              </p>
              <button>
                <Link href={`blogs/${findLatestBlog()}`}>Latest Blog â†’</Link>
              </button>
            </div>
          </div>
          <HeroSlider />
        </div>
        <Marketing />
        <Footer />
      </div>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();

  const { data: sessionData } = useSession();

  return (
    <div className={styles.authShowcase}>
      {sessionData && <p>Logged in as {sessionData?.user?.name}</p>}
      {secretMessage && <p>{secretMessage}</p>}
      <button
        className={styles.signInButton}
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
